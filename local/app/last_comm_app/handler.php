<?php
require_once __DIR__ . '/functions.php';

// 1) –ü–æ–ª—É—á–∞–µ–º "—Å—ã—Ä—ã–µ" –¥–∞–Ω–Ω—ã–µ
$raw = file_get_contents('php://input');
logData('RAW DATA', $raw);

// 2) –†–∞–∑–±–∏—Ä–∞–µ–º URL-–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
parse_str($raw, $parsedData);
logData('PARSED DATA', $parsedData);

// 3) –ü–æ–ª—É—á–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è
$event = $parsedData['event'] ?? '';
logData('handler.php -> –°–æ–±—ã—Ç–∏–µ', $event);

// 4) –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º —Å–ª—É–∂–µ–±–Ω—ã–µ –≤—ã–∑–æ–≤—ã Bitrix24
if (empty($event)) {
    logData("‚öôÔ∏è –°–ª—É–∂–µ–±–Ω—ã–π –≤—ã–∑–æ–≤ (–±–µ–∑ event), –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º", $parsedData);
    echo json_encode(['status' => 'ok', 'message' => 'No event param']);
    return;
}

// 5) –ï—Å–ª–∏ —ç—Ç–æ ONCRMACTIVITYADD
if ($event === 'ONCRMACTIVITYADD') {
    $activityId = $parsedData['data']['FIELDS']['ID'] ?? null;

    if (!$activityId) {
        logData("‚ö†Ô∏è –ù–µ—Ç ID –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏", $parsedData);
        echo json_encode(['status' => 'error', 'message' => '–ù–µ—Ç ID –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏']);
        return;
    }

    // 6) –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
    $activityData = callRest('crm.activity.get', ['id' => $activityId]);
    logData("üì© –ü–æ–ª—É—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏", $activityData);

    // –í–∞–∂–Ω–æ: –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —Å—Ç—Ä–æ–∫—É –≤ —á–∏—Å–ª–æ
    $ownerTypeId = isset($activityData['result']['OWNER_TYPE_ID'])
        ? (int)$activityData['result']['OWNER_TYPE_ID']
        : 0;

    $ownerId = isset($activityData['result']['OWNER_ID'])
        ? (int)$activityData['result']['OWNER_ID']
        : 0;

    if (!$ownerTypeId || !$ownerId) {
        logData("‚ö†Ô∏è –û—à–∏–±–∫–∞: –Ω–µ—Ç –≤–ª–∞–¥–µ–ª—å—Ü–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏", $activityData);
        echo json_encode(['status' => 'error', 'message' => '–ù–µ—Ç –≤–ª–∞–¥–µ–ª—å—Ü–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏']);
        return;
    }

    // 7) –ï—Å–ª–∏ —ç—Ç–æ –∫–æ–Ω—Ç–∞–∫—Ç (OWNER_TYPE_ID = 3) ‚Äî –æ–±–Ω–æ–≤–ª—è–µ–º —Å—Ä–∞–∑—É
    if ($ownerTypeId === 3) {
        updateLastCommunication($ownerId);
        echo json_encode(['status' => 'success', 'message' => '–û–±–Ω–æ–≤–ª–µ–Ω–æ –¥–ª—è –∫–æ–Ω—Ç–∞–∫—Ç–∞']);
        return;
    }

    // 8) –ï—Å–ª–∏ —ç—Ç–æ —Å–¥–µ–ª–∫–∞ (OWNER_TYPE_ID = 2), –ø–æ–ª—É—á–∞–µ–º –∫–æ–Ω—Ç–∞–∫—Ç, —Å–≤—è–∑–∞–Ω–Ω—ã–π —Å —ç—Ç–æ–π —Å–¥–µ–ª–∫–æ–π
    if ($ownerTypeId === 2) {
        $dealData = callRest('crm.deal.get', ['id' => $ownerId]);
        logData("üìú –î–∞–Ω–Ω—ã–µ —Å–¥–µ–ª–∫–∏", $dealData);

        // –î–ª—è –æ–¥–Ω–æ–π —Å–¥–µ–ª–∫–∏ –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤:
        // - –ï—Å–ª–∏ API –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–æ–ª–µ CONTACT_ID (–æ–¥–∏–Ω –∫–æ–Ω—Ç–∞–∫—Ç)
        // - –ò–ª–∏ –º–∞—Å—Å–∏–≤ CONTACTS[] (–Ω–µ—Å–∫–æ–ª—å–∫–æ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤)
        // –ù–∏–∂–µ ‚Äì —Å–∞–º—ã–π –ø—Ä–æ—Å—Ç–æ–π —Å–ª—É—á–∞–π, –∫–æ–≥–¥–∞ —Å–¥–µ–ª–∫–∞ –∏–º–µ–µ—Ç –ø–æ–ª–µ CONTACT_ID:
        $contactId = $dealData['result']['CONTACT_ID'] ?? null;

        // –ï—Å–ª–∏ –Ω–µ—Ç CONTACT_ID, –ø–æ–ø—Ä–æ–±—É–µ–º –≤–∑—è—Ç—å –∏–∑ CONTACTS, –µ—Å–ª–∏ –æ–Ω–æ –µ—Å—Ç—å
        if (!$contactId && isset($dealData['result']['CONTACTS']) && is_array($dealData['result']['CONTACTS'])) {
            // –ë–µ—Ä—ë–º –ø–µ—Ä–≤—ã–π –∫–æ–Ω—Ç–∞–∫—Ç –≤ –º–∞—Å—Å–∏–≤–µ
            $contactId = $dealData['result']['CONTACTS'][0]['CONTACT_ID'] ?? null;
        }

        if ($contactId) {
            updateLastCommunication($contactId);
            echo json_encode(['status' => 'success', 'message' => '–û–±–Ω–æ–≤–ª–µ–Ω–æ –¥–ª—è –∫–æ–Ω—Ç–∞–∫—Ç–∞ —á–µ—Ä–µ–∑ —Å–¥–µ–ª–∫—É']);
            return;
        } else {
            logData("‚ö†Ô∏è –°–¥–µ–ª–∫–∞ –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –∫–æ–Ω—Ç–∞–∫—Ç", $dealData);
            echo json_encode(['status' => 'error', 'message' => '–°–¥–µ–ª–∫–∞ –±–µ–∑ –∫–æ–Ω—Ç–∞–∫—Ç–∞']);
            return;
        }
    }

    // 9) –ï—Å–ª–∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å —Å–≤—è–∑–∞–Ω–∞ –Ω–µ —Å –∫–æ–Ω—Ç–∞–∫—Ç–æ–º –∏ –Ω–µ —Å–æ —Å–¥–µ–ª–∫–æ–π, –ø—Ä–æ—Å—Ç–æ –ª–æ–≥–∏—Ä—É–µ–º
    logData("‚ö†Ô∏è –ù–µ —Å–≤—è–∑–∞–Ω–∞ —Å –∫–æ–Ω—Ç–∞–∫—Ç–æ–º –∏–ª–∏ —Å–¥–µ–ª–∫–æ–π", $activityData);
    echo json_encode(['status' => 'error', 'message' => '–ù–µ —Å–≤—è–∑–∞–Ω–∞ —Å –∫–æ–Ω—Ç–∞–∫—Ç–æ–º –∏–ª–∏ —Å–¥–µ–ª–∫–æ–π']);
}
